#!/bin/bash
if [ "$#" -gt 0 ] && [ "$1" == "upd" ]; then
	curl -o tarkov 'https://raw.githubusercontent.com/bgkillas/tarkov/main/tarkov'
	if [ "$(stat -c %U "${BASH_SOURCE[0]}")" == "$USER" ]; then
		diff tarkov "${BASH_SOURCE[0]}"
		cat tarkov >"${BASH_SOURCE[0]}"
		rm tarkov
	else
		echo "you do not own ${BASH_SOURCE[0]}"
	fi
	exit
fi
CFG="$HOME/.config/tarkov"
mkdir -p "$CFG"/{cfg,eft} &>/dev/null
if [ "$#" -gt 0 ] && [ "$1" == "pro" ]; then
	read -re ptn
	if [ ${#ptn} -gt 1 ]; then
		echo "$ptn" >"$CFG"/proton
		rm -rf "$CFG"/pfx
	fi
fi
if [ "$#" -gt 0 ] && [ "$1" == "pre" ]; then
	read -re pre
	if [ ${#pre} -gt 1 ]; then
		echo "$pre" >"$CFG"/prerun
	fi
fi
chmod +x "${BASH_SOURCE[0]}"
set -e
cd "$HOME"
if [ ! -d "$HOME/.local/share/Steam/steamapps/common/Proton BattlEye Runtime" ]; then
	echo "$HOME/.local/share/Steam/steamapps/common/Proton BattlEye Runtime does not exist make sure 'Proton Battleye Runtime' tool is installed"
	exit
fi
if [ -f "$CFG"/proton ] && [ "$(wc -l <"$CFG"/proton)" -eq 1 ]; then
	PROTON="$(cat "$CFG"/proton)"
elif [ -d "$HOME/.local/share/Steam/steamapps/common/Proton 7.0" ]; then
	PROTON="$HOME/.local/share/Steam/steamapps/common/Proton 7.0"
else
	echo "$HOME/.local/share/Steam/steamapps/common/Proton 7.0 does not exist either install proton 7.0 and just hit enter now or submit full path to custom proton directory"
	read -re ptn
	if [ ${#ptn} -gt 1 ]; then
		echo "$ptn" >"$CFG"/proton
	fi
	exit
fi
if [ -d "$PROTON/*/bin" ]; then
	echo "$PROTON/*/bin does not exist run a game with that proton install and try again"
	exit
fi
wine64="$(find "$PROTON" | grep "bin/wine64$")"
if [ ! -d "$CFG/pfx" ] || [ ! -d "$CFG/bsg" ]; then
	curl 'https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks' -o winetricks
	curl -L 'https://github.com/dscharrer/innoextract/releases/download/1.9/innoextract-1.9-linux.tar.xz' -o inno.tar.xz
	curl -L 'https://prod.escapefromtarkov.com/launcher/download' -o bsglauncher.exe
	set +e
	rm -rf "$CFG"/{bsg,pfx}
	set -e
	tar -xf inno.tar.xz
	cd innoextract-1.9-linux
	./innoextract -s ../bsglauncher.exe
	mv app "$CFG"/bsg
	cd ..
	rm -rf tmp bsglauncher.exe inno.tar.xz innoextract-1.9-linux
	WINEDEBUG=-all \
		PATH="${wine64//\/wine64/}:$PATH" \
		WINE="$wine64" \
		WINEPREFIX="$CFG/pfx" \
		sh winetricks -q -f dotnet48
	rm -rf winetricks
	ln -sf "$CFG"/cfg "$CFG/pfx/drive_c/users/steamuser/AppData/Roaming/Battlestate Games"
	ln -sf "$CFG"/pfx/drive_c/windows/syswow64/websocket.dll "$CFG"/pfx/drive_c/windows/system32
	mkdir -p "$CFG/pfx/drive_c/Battlestate Games"
	ln -sf "$CFG/eft" "$CFG/pfx/drive_c/Battlestate Games/EFT"
	WINEPREFIX="$CFG/pfx" \
		"$wine64" winecfg -v win10
	rm -rf "$CFG/pfx/drive_c/windows/Fonts"
	ln -sf "$PROTON"/*/share/fonts "$CFG/pfx/drive_c/windows/Fonts"
	ln -sf "$PROTON"/*/lib64/wine/dxvk/d3d11.dll "$CFG/pfx/drive_c/windows/system32/d3d11.dll"
	ln -sf "$PROTON"/*/lib64/wine/dxvk/dxgi.dll "$CFG/pfx/drive_c/windows/system32/dxgi.dll"
	sleep 3
fi
cd "$CFG"/bsg
if [ -f "$CFG"/prerun ]; then
	PROTON_BATTLEYE_RUNTIME="$HOME/.local/share/Steam/steamapps/common/Proton BattlEye Runtime" \
		WINEDLLOVERRIDES='d3d11=n' \
		WINEFSYNC='1' \
		WINEDEBUG='-all' \
		WINEPREFIX="$CFG/pfx" \
		$(cat "$CFG"/prerun) \
		"$wine64" \
		"$CFG"/bsg/BsgLauncher.exe
else
	PROTON_BATTLEYE_RUNTIME="$HOME/.local/share/Steam/steamapps/common/Proton BattlEye Runtime" \
		WINEDLLOVERRIDES='d3d11=n' \
		WINEFSYNC='1' \
		WINEDEBUG='-all' \
		WINEPREFIX="$CFG/pfx" \
		"$wine64" \
		"$CFG"/bsg/BsgLauncher.exe
fi
